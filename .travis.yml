language: php

os: linux

dist: bionic

php:
    - '7.4'

jobs:
    include:
        -   
            &test
            
            stage: test
            name: "Symfony 4.4.* build (PHP 7.4)"

            env: APP_ENV=test_cached SYMFONY_VERSION="4.4.*" SYLIUS_CACHE_DIR=$HOME/.sylius-cache SYLIUS_BUILD_DIR=etc/build

            cache:
                yarn: true
                directories:
                    - ~/.composer/cache/files
                    - $SYLIUS_CACHE_DIR

            services:
                - mysql
                    
            addons:
                apt:
                    sources:
                        - google-chrome
                    packages:
                        - google-chrome-stable
                chrome: stable

            before_install:
                - phpenv config-rm xdebug.ini || true

                - echo "memory_limit=4096M" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

                - composer self-update --preview

            install:
                - if [ ! -z "${SYMFONY_VERSION}" ]; then bin/require-symfony-version composer.json "${SYMFONY_VERSION}"; fi
                - composer update --no-interaction --prefer-dist
                - yarn install

            before_script:
                - APP_DEBUG=1 bin/console doctrine:database:create -vvv # Have to be run with debug = true, to omit generating proxies before setting up the database
                - bin/console cache:warmup -vvv
                - bin/console doctrine:migrations:migrate --no-interaction -vvv

                - bin/console assets:install public -vvv
                - yarn build

                # Download Symfony CLI
                - |
                    if [ ! -f $SYLIUS_CACHE_DIR/symfony ]; then
                        wget https://get.symfony.com/cli/installer -O - | bash
                        mv ~/.symfony/bin/symfony $SYLIUS_CACHE_DIR
                    fi
                    php -v | head -n 1 | awk '{ print $2 }' > .php-version

                # Run Chrome Headless
                - google-chrome-stable --enable-automation --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --allow-insecure-localhost --disable-translate --disable-extensions --no-sandbox --enable-features=Metal --headless --remote-debugging-port=9222 --window-size=2880,1800 --proxy-server='direct://' --proxy-bypass-list='*' http://127.0.0.1 > /dev/null 2>&1 &

                # Run webserver
                - $SYLIUS_CACHE_DIR/symfony server:start --port=8080 --dir=public --daemon

            script:
                - composer validate --strict

                - vendor/bin/security-checker security:check

                - vendor/bin/ecs check src

                - vendor/bin/phpstan analyse -c phpstan.neon -l max src/

                - vendor/bin/phpspec run --no-interaction -f dot

                - bin/console sylius:fixtures:load --no-interaction -vvv

                - echo "Testing (Behat, without javascript scenarios; ~@javascript && ~@todo && ~@cli)" "Sylius"
                - vendor/bin/behat --strict --no-interaction -vvv -f progress --tags="~@javascript && ~@todo && ~@cli"

                - echo "Testing (Behat, only javascript scenarios; @javascript && ~@todo && ~@cli)" "Sylius"
                - vendor/bin/behat --strict --no-interaction -vvv -f progress --tags="@javascript && ~@todo && ~@cli" || vendor/bin/behat --strict --no-interaction -vvv -f progress --tags="@javascript && ~@todo && ~@cli" --rerun

                - echo "Testing prod requirements (Composer)" "Sylius"
                - APP_ENV=prod && APP_DEBUG=0 && composer install --no-dev --no-interaction --prefer-dist

            after_failure:
                - vendor/lakion/mink-debug-extension/travis/tools/upload-textfiles "${SYLIUS_BUILD_DIR}/*.log"

        -
            <<: *test

            name: "Symfony 4.4.* build (PHP 7.3)"
            
            php: '7.3' 

        -
            stage: test
            name: "Docker build"

            services:
                - docker

            script:
                - docker-compose --version
                - docker-compose pull --ignore-pull-failures || true
                - docker-compose build --pull
                - docker-compose up -d

                - sleep 60

                - docker-compose exec php bin/console sylius:fixtures:load --no-interaction

                - curl http://localhost/
