services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Custom extension to "enable" different configurations, based on future needs
    App\Form\Type\Extension\CartItemTypeQuantityExtension:
        arguments:
            - '@sylius.form.data_mapper.order_item_quantity'
        tags:
            - { name: 'form.type_extension' }

    # Decorating limited to only this service, as it's the only one that needs to be decorated to fulfill "task" requirements
    App\Form\Type\Order\AddToCartType:
        decorates: 'sylius.form.type.add_to_cart'
        arguments:
            - '@.inner'
