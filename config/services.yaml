# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en_US
    sylius.catalog_promotion.scope.by_phrase: !php/const App\Model\CatalogPromotionScopeInterface::TYPE_BY_PHRASE

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Sylius\Bundle\CoreBundle\Validator\Constraints\CatalogPromotionScopeValidator:
        arguments:
            - [ 
                !php/const Sylius\Component\Core\Model\CatalogPromotionScopeInterface::TYPE_FOR_TAXONS,
                !php/const Sylius\Component\Core\Model\CatalogPromotionScopeInterface::TYPE_FOR_VARIANTS,
                !php/const App\Model\CatalogPromotionScopeInterface::TYPE_BY_PHRASE
            ]
            - !tagged_iterator { tag: 'sylius.catalog_promotion.scope_validator', index_by: 'key' }
        tags: 
            - { name: 'validator.constraint_validator', alias: 'sylius_catalog_promotion_scope'}

    App\Validator\CatalogPromotionScope\ByPhraseScopeValidator:
        tags:
            - { name: 'sylius.catalog_promotion.scope_validator', key: 'by_phrase' }
    
    App\Provider\ByPhraseVariantsProvider:
        arguments:
            - '@sylius.repository.product_variant'
        tags:
            - { name: 'sylius.catalog_promotion.variants_provider' }

    App\Form\Type\CatalogPromotionScope\ByPhraseScopeConfigurationType:
        tags:
            - { name: 'sylius.catalog_promotion.scope_configuration_type', key: '%sylius.catalog_promotion.scope.by_phrase%' }
            - { name: 'form.type' }
